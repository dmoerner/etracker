services:
  etracker:
    image: user/etracker:latest
    container_name: etracker
    environment:
      PGHOST: etracker_pg
      PGDATABASE: etracker
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      ETRACKER_AUTHORIZATION: ${ETRACKER_AUTHORIZATION}
      ETRACKER_FRONTEND_HOSTNAME: ${ETRACKER_FRONTEND_HOSTNAME}
      # ETRACKER_BACKEND_PORT=3000
    depends_on:
      etracker_pg:
        condition: service_healthy
    ports:
      - 3000:3000

  etracker_pg:
    image: postgres:17
    container_name: etracker_pg
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: etracker
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PGUSER}"]
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  etracker_pg_test:
    image: postgres:17
    container_name: etracker_pg_test
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: etracker_test
    ports:
      - 5431:5432
    volumes:
      - postgres_test_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  postgres_test_data:
